{"version":3,"sources":["Components/Menu/Menu.js","Components/Header/Header.js","Components/Footer/Footer.js","reportWebVitals.js","Components/FootballerCard/FootballerCard.js","Components/FieldCard/FieldCard.js","Components/MatchCard/MatchCard.js","Components/WeekCard/WeekCard.js","Services/HtmlCodeFromUrlService/HtmlCodeFromUrlService.js","Models/Match/Match.js","Models/Team/Team.js","Models/Footballer/Footballer.js","Services/CalendarTableParseService/CalendarTableParseService.js","Models/Calendar/Calendar.js","Models/Week/Week.js","Services/CalendarMergerService/CalendarMergerService.js","Services/ApplicationDataService/ApplicationDataService.js","Services/CalendarReaderService/CalendarReaderService.js","Components/Calendar/useCalendar.js","Components/Calendar/Calendar.js","Components/Categories/Categories.js","index.js"],"names":["Menu","useState","open","setOpen","className","onClick","headerHeight","document","getElementsByTagName","clientHeight","menuHeight","window","innerHeight","menuElement","getElementsByClassName","style","height","top","setMenuHeightAndTop","href","Header","src","alt","Footer","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FootballerCard","footballer","name","imageUrl","statsUrl","target","rel","FieldCard","match","fieldIcon","isAway","console","log","fieldLinkUrl","encodeURI","homeTeam","fieldName","MatchCard","matchDetails","isResting","isRivalRetired","date","time","calendarUrl","displayName","logoUrl","awayTeam","WeekCard","isCurrentWeek","week","matchdaytext","isCollapsibleOpen","collapsibleTriggerClass","matches","length","matchday","shortDescription","isProblematic","trigger","triggerTagName","triggerClassName","triggerOpenedClassName","map","index","HtmlCodeFromUrlService","url","a","fetch","response","text","htmlCode","Promise","resolve","error","Match","this","setDatetime","setIsAway","setIsResting","setIsRivalRetired","datetime","datetimeToDateString","datetimeToTimeString","toLocaleDateString","timeZone","day","month","weekday","toUpperCase","replace","toLocaleTimeString","hour12","hour","minute","toLowerCase","includes","config","teamNameToIdentifyAwayMatches","isRetired","substring","Team","category","Error","categoryJson","teamsConfigJson","categories","find","teamConfig","teams","team","normalizeName","formatDisplayName","warn","toTitleCase","split","word","charAt","slice","join","Footballer","footballerConfig","footballersConfigJson","footballers","push","CalendarTableParseService","trRows","readMatchesRows","i","tdFields","item","matchdayString","readMatchDayFromRow","getDatetimeFromRow","homeTeamName","getHomeTeamFromRow","awayTeamName","getAwayTeamFromRow","resultString","getResultFromRow","result","matchesData","matchData","parseDateAndTime","homeTeamCalendarUrl","homeTeamLogoUrl","awayTeamCalendarUrl","awayTeamLogoUrl","footballerName","textContent","trim","dateString","timeString","DOMParser","parseFromString","year","UTC","toDateString","Calendar","weeks","currentWeekIndex","Week","weekofyear","updateShortDescription","updateIsProblematic","recentlyAddedMatch","getDate","getShortDescription","previousLastMatch","areMatchesProblematics","match1","match2","neitherMatchesAreResting","neitherMatchesAreAgainstaRetiredRival","areTheSameDay","timeBetweenMatchesInHours","atLeastOneIsAway","CalendarMergerService","originalToday","calendar","today","firstMatchWeekOfYear","getWeekOfYear","currentWeekProcessing","currentMatchProcessing","currentMatchProcessingWeekOfYear","isTodayAfterTheLastMatchOfTheWeek","addMatch","matches1","matches2","allSortedMatches","concat","sort","matchA","matchB","d","getMonth","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","Math","ceil","lastMatchOfCurrentWeek","lastMatchEndOfMatchTime","getTime","setHours","getHours","ApplicationDataService","headers","Headers","append","init","method","request","Request","applicationDataUrl","json","jsonData","CalendarReaderService","calendarMergerService","calendarTableParseService","applicationDataService","calendarName","calendarJson","localStorage","getItem","JSON","parse","info","setItem","stringify","allFootballerMatches","calendarConfig","calendars","footballerNames","getMatchesFromURL","footballerMatches","getMergedAndSortedMatches","getMatchesFromApplicationData","additionalMatches","footballerAdditionalMatches","filter","allMatches","createCalendarFromSortedMatches","htmlCodeFromURLService","HtmlCodeFromURLService","getHtmlCodeFromURL","calendarSourceCode","parseMatchesFromHtmlCode","getApplicationData","applicationData","parseMatchesFromData","useCalendar","setCalendar","useEffect","calendarReaderService","cachedCalendar","getCachedCalendar","getLiveCalendar","liveCalendar","setCachedCalendar","message","nextweek","upcomingWeeks","Categories","alexFootballer","victorFootballer","loupesFootballer","ReactDOM","render","StrictMode","exact","path","component","getElementById"],"mappings":"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","file":"static/js/main.f6614e3c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './Menu.css'\n\nfunction Menu () {\n  const [open, setOpen] = useState(false)\n\n  function setMenuState () {\n    setOpen(!open)\n    setMenuHeightAndTop()\n  }\n\n  return (\n    <div>\n      <button className={ open ? 'burger burger-open' : 'burger burger-close'} onClick={ setMenuState }>\n        <span className='materialicons'>{ open ? 'close' : 'menu' }</span>\n      </button>\n      <div className={ open ? 'menu menu-open' : 'menu menu-close'} onClick={() => { setOpen(false) }}>\n        <a href=\"/#/\">Calendario Peques</a>\n        <a href=\"/#/loupes\">Calendario Míster</a>\n        <a href=\"/#/categorias\">Categorías</a>\n        <a href=\"https://www.fcf.cat/classificacio/2223/futbol-7/alevi-tercera-divisio/grup-1\">Clasificación Alex</a>\n        <a href=\"https://www.fcf.cat/classificacio/2223/futbol-7/prebenjami-7/grup-9\">Clasificación Victor</a>\n        <a href=\"https://www.fcf.cat/classificacio/2223/futbol-femeni/segona-divisio-femeni-alevi/grup-4\">Clasificación Míster Femenino</a>\n        <a href=\"https://www.fcf.cat/classificacio/2223/futbol-11/quarta-catalana/grup-18\">Clasificación Míster Senior</a>\n      </div>\n    </div>\n  )\n}\n\nfunction setMenuHeightAndTop () {\n  const headerHeight = document.getElementsByTagName('header')[0].clientHeight\n  const viewportHeight = window.innerHeight\n  const menuHeight = viewportHeight - headerHeight\n\n  const menuElement = document.getElementsByClassName('menu')[0]\n  menuElement.style.height = menuHeight + 'px'\n  menuElement.style.top = headerHeight + 'px'\n}\n\nexport default Menu\n","import React from 'react'\nimport Menu from '../Menu/Menu'\nimport './Header.css'\n\nfunction Header () {\n  return (\n          <header className=\"header\">\n              <div>\n                <img src='https://files.fcf.cat/escudos/clubes/escudos/00100_0000618164_premier_200x200.png' alt='icon' />\n                <img src='https://files.fcf.cat/escudos/clubes/escudos/00100_0000741560_canyelles_200x200.png' alt='icon' />\n              </div>\n              <p>\n                  Partidos de Alex, Victor y Míster\n              </p>\n              <Menu/>\n          </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport './Footer.css'\n\nfunction Footer () {\n  return (\n      <div className=\"Footer\">\n        <footer>\n          <p>\n            Samuel Casanova, { new Date().getFullYear() }\n          </p>\n        </footer>\n      </div>\n  )\n}\n\nexport default Footer\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './FootballerCard.css'\n\nfunction FootballerCard ({ footballer }) {\n  const name = footballer.name\n  const imageUrl = footballer.imageUrl\n  const statsUrl = footballer.statsUrl\n\n  return (\n          <div className='footballercard'>\n            <a href= { statsUrl } target=\"_blank\" rel=\"noreferrer\">\n              <img src={ imageUrl } alt={ name } />\n            </a>\n          </div>\n  )\n}\n\nFootballerCard.propTypes = {\n  footballer: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string,\n    statsUrl: PropTypes.string\n  })\n}\n\nexport default FootballerCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './FieldCard.css'\n\nfunction FieldCard ({ match }) {\n  const fieldIcon = (match.isAway ? 'place' : 'home')\n  console.log('TEMP match=', match)\n  const fieldLinkUrl = 'https://www.google.com/maps/search/?api=1&query=' + encodeURI(match.homeTeam?.fieldName)\n\n  return (\n            <a className='fieldcard' href={ fieldLinkUrl } target='_blank' rel='noreferrer' >\n              <span className='materialicons'>\n                { fieldIcon }\n              </span>\n            </a>\n  )\n}\n\nFieldCard.propTypes = {\n  match: PropTypes.shape({\n    homeTeam: PropTypes.shape({\n      fieldName: PropTypes.string.isRequired\n    }),\n    isAway: PropTypes.bool.isRequired\n  })\n}\n\nexport default FieldCard\n","import React from 'react'\nimport './MatchCard.css'\nimport PropTypes from 'prop-types'\nimport FootballerCard from '../FootballerCard/FootballerCard'\nimport FieldCard from '../FieldCard/FieldCard'\n\nfunction MatchCard ({ match }) {\n  let matchDetails = ''\n  if (match.isResting) {\n    matchDetails = <div className='datetime'>(Descansa)</div>\n  } else if (match.isRivalRetired) {\n    matchDetails = <div className='datetime'>(Retirado)</div>\n  } else {\n    matchDetails = (<div className='datetime'>\n                      <span> { match.date } </span>\n                      <span> { match.time } </span>\n                    </div>)\n  }\n  return (\n      <div className='container'>\n          {matchDetails}\n          <span className='footballer'><FootballerCard footballer={ match.footballer }/></span>\n          <a className='homeTeamName' href={ match.homeTeam?.calendarUrl } target=\"_blank\" rel=\"noreferrer\">\n            { match.homeTeam?.displayName }\n          </a>\n          <a className='homeTeamLogo' href={ match.homeTeam?.calendarUrl } target=\"_blank\" rel=\"noreferrer\">\n            <img src={ match.homeTeam?.logoUrl }/>\n          </a>\n          <span className='vs'>vs</span>\n          <a className='awayTeamLogo' href={ match.awayTeam?.calendarUrl } target=\"_blank\" rel=\"noreferrer\">\n            <img src={ match.awayTeam?.logoUrl }/>\n          </a>\n          <a className='awayTeamName' href={ match.awayTeam?.calendarUrl } target=\"_blank\" rel=\"noreferrer\">\n            { match.awayTeam?.displayName }\n          </a>\n          <span className='isAway'> <FieldCard match={ (match) }/></span>\n      </div>\n  )\n}\n\nMatchCard.propTypes = {\n  match: PropTypes.shape({\n    matchday: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    footballer: PropTypes.object.isRequired,\n    homeTeam: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      calendarUrl: PropTypes.string,\n      logoUrl: PropTypes.string\n    }),\n    awayTeam: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      calendarUrl: PropTypes.string,\n      logoUrl: PropTypes.string\n    }),\n    isAway: PropTypes.bool.isRequired,\n    isRivalRetired: PropTypes.bool,\n    isResting: PropTypes.bool\n  })\n}\n\nexport default MatchCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MatchCard from '../MatchCard/MatchCard'\nimport './WeekCard.css'\nimport Collapsible from 'react-collapsible'\n\nfunction WeekCard ({ isCurrentWeek, week }) {\n  let matchdaytext = null\n  let isCollapsibleOpen = false\n  let collapsibleTriggerClass = 'collapsible'\n  if (isCurrentWeek || week.matches.length === 0) {\n    matchdaytext = 'Próxima Jornada'\n    isCollapsibleOpen = true\n  } else {\n    matchdaytext = 'Jornada ' + week.matches[0].matchday + ' ' + week.shortDescription\n  }\n  if (week.isProblematic) {\n    collapsibleTriggerClass += ' problematic'\n  }\n  return (\n          <div className='weekcard'>\n            {/* <div className='matchdaytext'>{matchdaytext}</div> */}\n            <Collapsible trigger={matchdaytext} triggerTagName='div' open={isCollapsibleOpen} triggerClassName={collapsibleTriggerClass}\n              triggerOpenedClassName={collapsibleTriggerClass}>\n              <div>\n                {\n                  week.matches.map(\n                    (match, index) => {\n                      return (<MatchCard match={ match } key={ index }/>)\n                    }\n                  )\n                }\n              </div>\n            </Collapsible>\n          </div>\n  )\n}\n\nWeekCard.propTypes = {\n  isCurrentWeek: PropTypes.bool.isRequired,\n  week: PropTypes.shape({\n    weekofyear: PropTypes.number.isRequired,\n    shortDescription: PropTypes.string.isRequired,\n    isProblematic: PropTypes.bool.isRequired,\n    matches: PropTypes.array.isRequired\n  })\n}\n\nexport default WeekCard\n","class HtmlCodeFromUrlService {\n  async getHtmlCodeFromURL (url) {\n    try {\n      return fetch(url).then((response) => response.text()).then(htmlCode =>\n        new Promise(resolve => {\n          return resolve(htmlCode)\n        }))\n    } catch (message) {\n      console.error(message)\n    }\n  }\n}\n\nexport default HtmlCodeFromUrlService\n","import config from '../../config.json'\n\nclass Match {\n  matchday\n  date\n  time\n  datetime\n  homeTeam\n  awayTeam\n  result\n  footballer\n\n  isAway\n  isRivalRetired\n  isResting\n\n  constructor (homeTeam, awayTeam) {\n    this.setDatetime(new Date(1970, 0, 1, 0, 0))\n    this.homeTeam = homeTeam\n    this.awayTeam = awayTeam\n    this.setIsAway()\n    this.setIsResting()\n    this.setIsRivalRetired()\n  }\n\n  setDatetime (datetime) {\n    this.datetime = datetime\n    this.date = this.datetimeToDateString(datetime)\n    this.time = this.datetimeToTimeString(datetime)\n  }\n\n  datetimeToDateString (datetime) {\n    const formattedDateString = datetime.toLocaleDateString('es-ES', { timeZone: 'UTC', day: '2-digit', month: 'short', weekday: 'short' })\n    const uppercaseAndRemovedCommasAndDots = formattedDateString.toUpperCase().replace(/[.,]/g, '')\n    return uppercaseAndRemovedCommasAndDots\n  }\n\n  datetimeToTimeString (datetime) {\n    const formattedTimeString = datetime.toLocaleTimeString('es-ES', { timeZone: 'UTC', hour12: false, hour: '2-digit', minute: '2-digit' })\n    const addedH = formattedTimeString + 'h'\n    return addedH\n  }\n\n  setIsAway () {\n    this.isAway = this.awayTeam?.name?.toLowerCase().includes(config.teamNameToIdentifyAwayMatches) ?? false\n  }\n\n  setIsRivalRetired () {\n    this.isRivalRetired = (this.homeTeam?.isRetired || this.awayTeam?.isRetired) ?? false\n  }\n\n  setIsResting () {\n    this.isResting = !this.homeTeam || !this.awayTeam\n  }\n\n  getShortDescription () {\n    return this.datetime.toLocaleDateString('es-ES', { timeZone: 'UTC', weekday: 'short' }).toUpperCase().substring(0, 3)\n  }\n}\n\nexport default Match\n","import teamsConfigJson from './teams.json'\n\nclass Team {\n  name\n  category\n  displayName\n  fieldName\n  calendarUrl\n  logoUrl\n  isRetired\n\n  constructor (name, category) {\n    if (!name) {\n      throw new Error('Team.constructor: Team name should have value')\n    }\n    this.name = name\n    this.category = (category || 'NOCATEGORY')\n    const categoryJson = teamsConfigJson.categories.find(categoryJson => categoryJson.name === category)\n    if (categoryJson) {\n      const teamConfig = categoryJson.teams.find(team => this.normalizeName(team.name) === this.normalizeName(name))\n      this.displayName = (teamConfig ? teamConfig.displayName : this.formatDisplayName(name))\n      this.fieldName = (teamConfig ? teamConfig.fieldName : name)\n      this.calendarUrl = (teamConfig ? teamConfig.calendarUrl : '')\n      this.logoUrl = (teamConfig ? teamConfig.logoUrl : '')\n      this.isRetired = (teamConfig ? teamConfig.isRetired : false)\n    } else {\n      console.warn('Team.constructor: Category not found: %s, while trying to build team with name: %s', category, name)\n      this.displayName = this.formatDisplayName(name)\n      this.fieldName = name\n      this.calendarUrl = ''\n      this.logoUrl = ''\n      this.isRetired = false\n    }\n  }\n\n  normalizeName (name) {\n    return name.toUpperCase().replace(/[ .,ªº\\\\]/g, '')\n  }\n\n  formatDisplayName (name) {\n    const titleCasedDisplayName = this.toTitleCase(name)\n    const formattedDisplayName = titleCasedDisplayName.replace(/[\\\\]/g, '')\n    return formattedDisplayName\n  }\n\n  toTitleCase (text) {\n    return text\n      .toLowerCase()\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ')\n  }\n}\n\nexport default Team\n","import Team from '../Team/Team'\nimport footballersConfigJson from './footballers.json'\n\nclass Footballer {\n  name\n  teams\n  imageUrl\n\n  constructor (name) {\n    if (!name) {\n      throw new Error('Footballer name should have value')\n    }\n    const footballerConfig = footballersConfigJson.footballers.find(footballer => name === footballer.name)\n    if (!footballerConfig) {\n      throw new Error('Footballer name not found in the config')\n    }\n    this.name = name\n    this.teams = []\n    this.imageUrl = (footballerConfig.imageUrl ? footballerConfig.imageUrl : '')\n    this.statsUrl = (footballerConfig.statsUrl ? footballerConfig.statsUrl : '')\n    for (const team of footballerConfig.teams) {\n      this.teams.push(new Team(team.name, team.category))\n    }\n  }\n\n  addTeam (team) {\n    this.teams.push(team)\n  }\n}\n\nexport default Footballer\n","import Match from '../../Models/Match/Match'\nimport Footballer from '../../Models/Footballer/Footballer'\nimport Team from '../../Models/Team/Team'\n\nclass CalendarTableParseService {\n  parseMatchesFromHtmlCode (htmlCode, footballer, category) {\n    const trRows = this.readMatchesRows(htmlCode)\n\n    const matches = []\n\n    for (let i = 0; i < trRows.length; i++) {\n      const tdFields = trRows.item(i).getElementsByTagName('td')\n      const matchdayString = this.readMatchDayFromRow(tdFields)\n      const datetime = this.getDatetimeFromRow(tdFields)\n      const homeTeamName = this.getHomeTeamFromRow(tdFields)\n      const awayTeamName = this.getAwayTeamFromRow(tdFields)\n      const resultString = this.getResultFromRow(tdFields)\n      const homeTeam = (homeTeamName ? new Team(homeTeamName, category) : null)\n      const awayTeam = (awayTeamName ? new Team(awayTeamName, category) : null)\n\n      const match = new Match(homeTeam, awayTeam)\n      match.matchday = matchdayString\n      match.setDatetime(datetime)\n      match.footballer = footballer\n      match.result = resultString\n      matches.push(match)\n    }\n\n    return matches\n  }\n\n  parseMatchesFromData (matchesData) {\n    const matches = []\n    for (const matchData of matchesData) {\n      const datetime = this.parseDateAndTime(matchData.date, matchData.time)\n\n      const homeTeam = new Team(matchData.homeTeamName)\n      homeTeam.calendarUrl = matchData.homeTeamCalendarUrl\n      homeTeam.logoUrl = matchData.homeTeamLogoUrl\n      homeTeam.fieldName = matchData.fieldName\n\n      const awayTeam = new Team(matchData.awayTeamName)\n      awayTeam.calendarUrl = matchData.awayTeamCalendarUrl\n      awayTeam.logoUrl = matchData.awayTeamLogoUrl\n\n      const match = new Match(homeTeam, awayTeam)\n      match.setDatetime(datetime)\n      match.footballer = new Footballer(matchData.footballerName)\n      match.isAway = matchData.isAway\n      matches.push(match)\n    }\n    return matches\n  }\n\n  getResultFromRow (tdFields) {\n    return tdFields.item(5).textContent.trim()\n  }\n\n  getAwayTeamFromRow (tdFields) {\n    const awayTeamString = tdFields.item(4).textContent.trim()\n    return awayTeamString\n  }\n\n  getHomeTeamFromRow (tdFields) {\n    const homeTeamString = tdFields.item(3).textContent.trim()\n    return homeTeamString\n  }\n\n  getDatetimeFromRow (tdFields) {\n    const dateString = tdFields.item(1).textContent.trim()\n    const timeString = tdFields.item(2).textContent.trim()\n    const datetime = this.parseDateAndTime(dateString, timeString)\n    return datetime\n  }\n\n  readMatchDayFromRow (tdFields) {\n    return tdFields.item(0).textContent.trim()\n  }\n\n  readMatchesRows (htmlCode) {\n    const domParser = new DOMParser()\n    const htmlDocument = domParser.parseFromString(htmlCode, 'text/html')\n    const tableDocument = htmlDocument.getElementsByClassName('fcftable').item(0)\n    const tableBodyDocument = tableDocument.getElementsByTagName('tbody').item(0)\n    const trRows = tableBodyDocument.getElementsByTagName('tr')\n    return trRows\n  }\n\n  parseDateAndTime (dateString, timeString) {\n    const day = dateString.substring(0, 2)\n    const month = dateString.substring(3, 5)\n    const year = dateString.substring(6)\n    const hour = timeString.substring(0, 2)\n    const minute = timeString.substring(3)\n    const datetime = new Date(Date.UTC(year, month - 1, day, hour, minute))\n    return datetime\n  }\n\n  dateTimeToString (datetime) {\n    return datetime.toDateString()\n  }\n}\n\nexport default CalendarTableParseService\n","class Calendar {\n    weeks\n    currentWeekIndex\n    constructor () {\n      this.weeks = []\n      this.currentWeekIndex = -1\n    }\n}\n\nexport default Calendar\n","class Week {\n    weekofyear\n    matches\n    shortDescription\n    isProblematic\n\n    constructor (weekofyear) {\n      this.weekofyear = weekofyear\n      this.matches = []\n      this.shortDescription = ''\n      this.isProblematic = false\n    }\n\n    addMatch (match) {\n      this.matches.push(match)\n      this.updateShortDescription()\n      this.updateIsProblematic()\n    }\n\n    updateShortDescription () {\n      if (!this.shortDescription) {\n        this.shortDescription = this.matches[0].getShortDescription()\n        return\n      }\n      const recentlyAddedMatch = this.matches[this.matches.length - 1]\n      const previousLastMatch = this.matches[this.matches.length - 2]\n      if (previousLastMatch.datetime.getDate() !== recentlyAddedMatch.datetime.getDate()) {\n        this.shortDescription += '+' + recentlyAddedMatch.getShortDescription()\n      }\n    }\n\n    updateIsProblematic () {\n      if (this.isProblematic || this.matches.length < 2) {\n        return\n      }\n      const recentlyAddedMatch = this.matches[this.matches.length - 1]\n      const previousLastMatch = this.matches[this.matches.length - 2]\n      if (this.areMatchesProblematics(previousLastMatch, recentlyAddedMatch)) {\n        this.isProblematic = true\n      }\n    }\n\n    areMatchesProblematics (match1, match2) {\n      const neitherMatchesAreResting = !match1.isResting && !match2.isResting\n      const neitherMatchesAreAgainstaRetiredRival = !match1.isRivalRetired && !match2.isRivalRetired\n      const areTheSameDay = match1.datetime.getDate() === match2.datetime.getDate()\n      const timeBetweenMatchesInHours = (match2.datetime - match1.datetime) / (1000 * 60 * 60)\n      const atLeastOneIsAway = match1.isAway || match2.isAway\n      return (neitherMatchesAreResting && neitherMatchesAreAgainstaRetiredRival && areTheSameDay &&\n        timeBetweenMatchesInHours < 3 && atLeastOneIsAway)\n    }\n}\n\nexport default Week\n","import Calendar from '../../Models/Calendar/Calendar'\nimport Week from '../../Models/Week/Week'\n\nclass CalendarMergerService {\n  createCalendarFromSortedMatches (matches, originalToday) {\n    const calendar = new Calendar()\n    const today = (originalToday || new Date())\n\n    const firstMatchWeekOfYear = this.getWeekOfYear(matches[0].datetime)\n    let currentWeekProcessing = new Week(firstMatchWeekOfYear)\n    calendar.weeks.push(currentWeekProcessing)\n    calendar.currentWeekIndex = 0\n\n    for (const currentMatchProcessing of matches) {\n      const currentMatchProcessingWeekOfYear = this.getWeekOfYear(currentMatchProcessing.datetime)\n\n      const isCurrentMatchInTheNextWeekOfYear = currentMatchProcessingWeekOfYear !== currentWeekProcessing.weekofyear\n      if (isCurrentMatchInTheNextWeekOfYear) {\n        const isTodayAfterTheLastMatchOfTheCurrentWeek = this.isTodayAfterTheLastMatchOfTheWeek(currentWeekProcessing, today)\n        if (isTodayAfterTheLastMatchOfTheCurrentWeek) {\n          calendar.currentWeekIndex++\n        }\n        currentWeekProcessing = new Week(currentMatchProcessingWeekOfYear)\n        calendar.weeks.push(currentWeekProcessing)\n      }\n\n      currentWeekProcessing.addMatch(currentMatchProcessing)\n    }\n    return calendar\n  }\n\n  getMergedAndSortedMatches (matches1, matches2) {\n    const allSortedMatches = matches1.concat(matches2)\n    allSortedMatches.sort((matchA, matchB) => {\n      return matchA.datetime - matchB.datetime\n    })\n    return allSortedMatches\n  }\n\n  getWeekOfYear (datetime) {\n    const d = new Date(Date.UTC(datetime.getFullYear(), datetime.getMonth(), datetime.getDate()))\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7))\n    const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1))\n    const weekNo = Math.ceil((((d - yearStart) / 86400000) + 1) / 7)\n    return weekNo\n  }\n\n  isTodayAfterTheLastMatchOfTheWeek (week, today) {\n    const lastMatchOfCurrentWeek = week.matches[week.matches.length - 1]\n    const lastMatchEndOfMatchTime = new Date(lastMatchOfCurrentWeek.datetime.getTime())\n    lastMatchEndOfMatchTime.setHours(lastMatchOfCurrentWeek.datetime.getHours() + 1)\n    const isTodayAfterTheLastMatchOfTheCurrentWeek = today > lastMatchEndOfMatchTime\n    return isTodayAfterTheLastMatchOfTheCurrentWeek\n  }\n}\n\nexport default CalendarMergerService\n","import config from '../../config.json'\n\nclass ApplicationDataService {\n  async getApplicationData () {\n    try {\n      const headers = new Headers()\n      headers.append('pragma', 'no-cache')\n      headers.append('cache-control', 'no-cache')\n      const init = {\n        method: 'GET',\n        headers: headers\n      }\n      const request = new Request(config.applicationDataUrl)\n      return fetch(request, init).then((response) => response.json()).then(jsonData =>\n        new Promise(resolve => {\n          return resolve(jsonData)\n        }))\n    } catch (message) {\n      console.error(message)\n    }\n  }\n}\n\nexport default ApplicationDataService\n","import HtmlCodeFromURLService from '../HtmlCodeFromUrlService/HtmlCodeFromUrlService'\nimport CalendarTableParseService from '../CalendarTableParseService/CalendarTableParseService'\nimport CalendarMergerService from '../CalendarMergerService/CalendarMergerService'\nimport config from '../../config.json'\nimport ApplicationDataService from '../ApplicationDataService/ApplicationDataService'\nimport Footballer from '../../Models/Footballer/Footballer'\n\nclass CalendarReaderService {\n  calendarMergerService\n  calendarTableParseService\n  applicationDataService\n\n  constructor () {\n    this.calendarMergerService = new CalendarMergerService()\n    this.calendarTableParseService = new CalendarTableParseService()\n    this.applicationDataService = new ApplicationDataService()\n  }\n\n  getCachedCalendar (calendarName) {\n    const calendarJson = localStorage.getItem(calendarName)\n    const calendar = JSON.parse(calendarJson)\n    console.info('CalendarReaderService.getCachedCalendar: Got cached calendar: %s', calendarName)\n    return calendar\n  }\n\n  setCachedCalendar (calendarName, calendar) {\n    localStorage.setItem(calendarName, JSON.stringify(calendar))\n    console.info('CalendarService.setCachedCalendar: Set cached calendar: %s', calendarName)\n  }\n\n  async getLiveCalendar (calendarName) {\n    let allFootballerMatches = []\n    const calendarConfig = config.calendars.find(calendar => calendar.name === calendarName)\n\n    for (const footballerName of calendarConfig.footballerNames) {\n      const footballer = new Footballer(footballerName)\n      for (const team of footballer.teams) {\n        const footballerMatches = await this.getMatchesFromURL(team.calendarUrl, footballer, team.category)\n        allFootballerMatches = this.calendarMergerService.getMergedAndSortedMatches(allFootballerMatches,\n          footballerMatches)\n        console.info('CalendarReaderService.getCalendar: Got and merged matches for team %s from the url:',\n          team.displayName, team.calendarUrl)\n      }\n      console.info('CalendarReaderService.getCalendar: Got calendar for footballer %s', footballerName)\n    }\n\n    const additionalMatches = await this.getMatchesFromApplicationData()\n    const footballerAdditionalMatches = additionalMatches.filter(\n      match => calendarConfig.footballerNames.includes(match.footballer.name))\n    console.info(`CalendarReaderService.getCalendar: Found ${footballerAdditionalMatches.length} \n      additional matches for calendar ${calendarName}`)\n\n    const allMatches = this.calendarMergerService.getMergedAndSortedMatches(allFootballerMatches,\n      footballerAdditionalMatches)\n    const calendar = this.calendarMergerService.createCalendarFromSortedMatches(allMatches)\n    return calendar\n  }\n\n  async getMatchesFromURL (url, footballer, category) {\n    const htmlCodeFromURLService = new HtmlCodeFromURLService()\n    const calendarSourceCode = await htmlCodeFromURLService.getHtmlCodeFromURL(url)\n    const matches = this.calendarTableParseService.parseMatchesFromHtmlCode(calendarSourceCode, footballer, category)\n    if (!matches || matches.length === 0) {\n      throw new Error(`CalendarReaderService.getMatchesFromURL: 0 matches read from calendar: ${url}`)\n    }\n    return matches\n  }\n\n  async getMatchesFromApplicationData () {\n    const applicationData = await this.applicationDataService.getApplicationData()\n    const matches = this.calendarTableParseService.parseMatchesFromData(applicationData.additionalMatches)\n    return matches\n  }\n}\n\nexport default CalendarReaderService\n","import { useState, useEffect } from 'react'\nimport CalendarReaderService from '../../Services/CalendarReaderService/CalendarReaderService'\n\nfunction useCalendar (calendarName) {\n  const [calendar, setCalendar] = useState({\n    currentWeekIndex: -1,\n    weeks: []\n  })\n\n  useEffect(async () => {\n    const calendarReaderService = new CalendarReaderService()\n\n    const cachedCalendar = calendarReaderService.getCachedCalendar(calendarName)\n    if (cachedCalendar) {\n      setCalendar(cachedCalendar)\n    }\n\n    try {\n      const liveCalendar = await calendarReaderService.getLiveCalendar(calendarName)\n      if (liveCalendar && liveCalendar.weeks) {\n        setCalendar(liveCalendar)\n        calendarReaderService.setCachedCalendar(calendarName, liveCalendar)\n      }\n    } catch (error) {\n      console.error(error.message)\n    }\n  }, [])\n\n  return calendar\n}\n\nexport default useCalendar\n","import React from 'react'\nimport WeekCard from '../WeekCard/WeekCard'\nimport useCalendar from './useCalendar'\nimport PropTypes from 'prop-types'\nimport './Calendar.css'\n\nfunction Calendar ({ calendarName }) {\n  const calendar = useCalendar(calendarName)\n\n  let nextweek = null\n  if (calendar.currentWeekIndex !== -1) {\n    nextweek = <WeekCard week={ calendar.weeks[calendar.currentWeekIndex] } isCurrentWeek= { true }/>\n  }\n  const upcomingWeeks = calendar.weeks.slice(calendar.currentWeekIndex + 1)\n  return (\n          <div>\n            <div>\n              <div className='nextweek'>{nextweek}</div>\n            </div>\n            <div className='list'>\n              {\n                upcomingWeeks.map(\n                  (week, index) => {\n                    return (<WeekCard week={ week } key={ index } isCurrentWeek={ false }/>)\n                  }\n                )\n              }\n            </div>\n          </div>\n  )\n}\n\nCalendar.propTypes = {\n  calendarName: PropTypes.string.isRequired\n}\n\nexport default Calendar\n","import React from 'react'\nimport './Categories.css'\nimport FootballerCard from '../FootballerCard/FootballerCard'\nimport Footballer from '../../Models/Footballer/Footballer'\n\nfunction Categories () {\n  const alexFootballer = new Footballer('Alex')\n  const victorFootballer = new Footballer('Victor')\n  const loupesFootballer = new Footballer('Loupes')\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Categoría</th>\n            <th>Edad</th>\n            <th>Modalidad</th>\n            <th>Quién</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Pre-benjamines</td>\n            <td>6 y 7 años</td>\n            <td>Fútbol 7</td>\n            <td><FootballerCard footballer={victorFootballer}/></td>\n          </tr>\n          <tr>\n            <td>Benjamines</td>\n            <td>8 y 9 años</td>\n            <td>Fútbol 7</td>\n            <td><FootballerCard footballer={alexFootballer}/></td>\n          </tr>\n          <tr>\n            <td>Alevines</td>\n            <td>10 y 11 años</td>\n            <td>Fútbol 7</td>\n            <td><FootballerCard footballer={loupesFootballer}/></td>\n          </tr>\n          <tr>\n            <td>Infantiles</td>\n            <td>12 y 13 años</td>\n            <td>Fútbol 11</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Cadetes</td>\n            <td>14 y 15 años</td>\n            <td>Fútbol 11</td>\n            <td><FootballerCard footballer={loupesFootballer}/></td>\n          </tr>\n          <tr>\n            <td>Juveniles</td>\n            <td>16 a 19 años</td>\n            <td>Fútbol 11</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Sénior</td>\n            <td>20 años o más</td>\n            <td>Fútbol 11</td>\n            <td><FootballerCard footballer={loupesFootballer}/></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Categories\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Header from './Components/Header/Header'\nimport Footer from './Components/Footer/Footer'\nimport { Switch, Route, HashRouter } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals'\nimport Calendar from './Components/Calendar/Calendar'\nimport Categories from './Components/Categories/Categories'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Header/>\n      <Switch>\n        <Route key='home' exact path='/'><Calendar calendarName='home'/></Route>\n        <Route key='loupes' path='/loupes'><Calendar calendarName='loupes'/></Route>\n        <Route key='categories' path='/categorias' component={Categories}/>\n      </Switch>\n      <Footer />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}